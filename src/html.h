const char *htmlMessage = "<!DOCTYPE html>"
                          "<html>"
                          "<head>"
                          "<meta charset='UTF-8'>"
                          "<title>Устройство АВЭБ</title>"
                          "<link rel='preconnect' href='https://fonts.googleapis.com'>"
                          "<link rel='preconnect' href='https://fonts.gstatic.com' crossorigin>"
                          "<link href='https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap' rel='stylesheet'>"
                          "</head>"
                          "<body class='body'>"
                          "<style>"
                          "form {"
                          "margin-bottom: 20px;"
                          "}"

                          "form label {"
                          "display: block;"
                          "margin-bottom: 10px;"
                          "}"

                          "form input[type='text'] {"
                          "padding: 5px;"
                          "font-size: 16px;"
                          "border: 1px solid #ccc;"
                          "border-radius: 3px;"
                          "width: 100%;"
                          "max-width: 500px;"
                          "}"

                          "form button {"
                          "padding: 10px 20px;"
                          "font-size: 16px;"
                          "background-color: #008CBA;"
                          "color: #fff;"
                          "border: none;"
                          "border-radius: 3px;"
                          "cursor: pointer;"
                          "}"

                          ".ticket {"
                          "margin-bottom: 20px;"
                          "padding: 10px;"
                          "border: 1px solid #ccc;"
                          "border-radius: 3px;"
                          "background-color: #f9f9f9;"
                          "box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);"
                          "}"

                          ".ticket h2 {"
                          "margin-top: 0;"
                          "margin-bottom: 10px;"
                          "font-size: 20px;"
                          "}"

                          ".ticket ul {"
                          "list-style: none;"
                          "margin: 0;"
                          "padding: 0;"
                          "}"

                          ".ticket ul li {"
                          "margin-bottom: 5px;"
                          "}"

                          "button.print {"
                          "display: block;"
                          "margin-top: 20px;"
                          "padding: 10px 20px;"
                          "font-size: 16px;"
                          "background-color: #008CBA;"
                          "color: #fff;"
                          "border: none;"
                          "border-radius: 3px;"
                          "cursor: pointer;"
                          "}"

                          ".body {"
                          "display: flex;"
                          "flex-direction: column;"
                          "align-items: center;"
                          "background-color: #c2dada;"
                          "}"

                          ".form {"
                          "display: flex;"
                          "flex-direction: column;"
                          "}"

                          ".numberLabel {"
                          "display: flex;"
                          "flex-direction: column;"
                          "align-items: center;"
                          "}"

                          ".quastionsLabel {"
                          "display: flex;"
                          "flex-direction: column;"
                          "margin: 25px 0 10px 0;"
                          "}"

                          ".labelText {"
                          "margin: 25px 0 10px 0;"
                          "align-self: center;"
                          "font-size: 25px;"
                          "}"

                          ".buttonsBlock {"
                          "margin-top: 10px;"
                          "display: flex;"
                          "flex-direction: column;"
                          "gap: 10px;"
                          "align-items: center;"
                          "font-family: Oswald;"
                          "}"

                          ".button {"
                          "width: 300px;"
                          "height: 50px;"
                          "background-color:#E8A87C;"
                          "border-radius: 10px;"
                          "border: 0;"
                          "cursor: pointer;"
                          "}"

                          ".quastionsTextArea {"
                          "resize: none;"
                          "width: 500px;"
                          "height: 300px;"
                          "background-color: aliceblue;"
                          "border-radius: 10px;"
                          "padding: 5px;"
                          "border: 0;"
                          "margin-top: 20px;"
                          "font-family: Oswald;"
                          "}"

                          ".ticket-containe {"
                          "padding: 15px;"
                          "}"

                          ".hide {"
                          "display: none;"
                          "}"

                          ".button_clean {"
                          "background-color: brown;"
                          "}"

                          ".quastionsNumber {"
                          "width: 40px;"
                          "margin: 5px;"
                          "padding: 5px;"
                          "border-radius: 5px;"
                          "background-color: aliceblue;"
                          "border: 0;"
                          "}"

                          ".ticket {"
                          "background-color: #fff;"
                          "border: 1px solid #ccc;"
                          "box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);"
                          "padding: 10px;"
                          "margin-bottom: 20px;"
                          "}"

                          ".ticket-containe {"
                          "width: 400px;"
                          "}"

                          ".ticket__header {"
                          "font-size: 24px;"
                          "margin-bottom: 10px;"
                          "}"

                          ".ticket__list {"
                          "list-style: none;"
                          "margin: 0;"
                          "padding: 0;"
                          "}"

                          ".ticket__list-item {"
                          "font-size: 16px;"
                          "line-height: 1.5;"
                          "margin-bottom: 5px;"
                          "}"

                          "h1{"
                          "padding: 10px;"
                          "border-radius: 3px;"
                          "font-family: Oswald;"
                          "}"

                          "legend{"
                          "width: 465px;"
                          "margin: 25px 0 10px 0;"
                          "font-size: 18px;"
                          "font-family: Oswald;"
                          "margin-left: 34px;"
                          "}"

                          ".h2{"
                          "font-size: 18px;"
                          "}"

                          ".buttonsBlock p {"
                          "font-family: Oswald;"
                          "font-weight: 600;"
                          "}"
                          "</style>\n"

                          "<h1>Устройство для автоматизированного составления и выдачи экзаменнационных билетов на Esp8266 </h1>\n"

                          "<legend>Введите вопросы и выберите нужное количество вопросов в билете</legend>\n"
                          "<select name=\"siti\" class=\"quastionsNumber\" \n>"
                          "<option value=\"3\" selected=\"selected\" >3</option>\n"
                          "<option value=\"4\">4</option>\n"
                          "<option value=\"5\">5</option>\n"

                          "<textarea class=\"quastionsTextArea\" type=\"text\" id=\"question-input\" placeholder=\"Одна строка - один вопрос\"></textarea>\n"
                          "<div class=\"buttonsBlock\"\n>"

                          "<button class=\"button\" type=\"button\" id=\"add-question-button\"><p>Добавить вопросы</p></button>\n"
                          "<button class=\"button hide button_clean\" type=\"button\" id=\"remove-question-button\"><p>Очистить</p></button>\n"
                          "<button class=\"button\" type=\"button\" onclick=\"printTickets()\"><p>Печать билетов</p></button>\n"
                          "<button class=\"button\" type=\"button\" id=\"generate-tickets-button\"><p>Сгенерировать билеты</p></button>\n"
                          "</div>\n"

                          "<div class=\"ticket-containe\" id=\"ticket-container\"></div>\n"
                          "<script>\n"

                          "const questionInput = document.getElementById('question-input');\n"
                          "const addQuestionButton = document.getElementById('add-question-button');\n"
                          "const removeQuestionsButton = document.getElementById('remove-question-button');\n"
                          "const ticketContainer = document.getElementById('ticket-container');\n"
                          "const generateTicketsButton = document.getElementById('generate-tickets-button');\n"
                          "const quastionsNumberInTicket = document.querySelector('.quastionsNumber');\n"

                          " const addQuestions = (questionInput, questions) => {\n"
                          "let question = questionInput.value;\n"
                          "const questionsArray = question.split('\\n');\n"
                          " if (question) {\n"
                          "for (let i = 0; i < questionsArray.length; i++) {\n"
                          "if (questionsArray[i] !== '') {\n"
                          "questions.push(questionsArray[i]);\n"
                          "}\n"
                          "}\n"
                          "questionInput.value = '';\n"
                          "}\n"
                          "}\n"

                          "const generateTicketHtml = (arr, index) => {\n"
                          "return `\n"
                          "<div class='ticket'>\n"
                          "<h2 class=\"ticket__header\">Билет №${index + 1}</h2>\n"
                          "<ul class=\"ticket__list\">\n"
                          "${arr.map((q, i) => `<li class=\"ticket__list-item\">${i + 1}) ${q}</li>`).join('')}\n"
                          "</ul>\n"
                          "</div>\n"
                          " `\n"
                          "}\n"

                          "let questions = [];\n"

                          "function getRandomQuestions(questions) {\n"
                          "const numQuestions = quastionsNumberInTicket.value;\n"
                          "const shuffledQuestions = questions.sort(() => Math.random() - 0.5);\n "
                          "return shuffledQuestions.slice(0, numQuestions);\n"
                          "}\n"

                          "function generateTickets() {\n"
                          "const length = questions.length;\n"
                          "const numTickets = Math.round(length / quastionsNumberInTicket.value);\n"
                          "ticketContainer.innerHTML = '';\n"

                          "for (let i = 0; i < numTickets; i++) {\n"

                          "const randomQuestions = getRandomQuestions(questions);\n"

                          "const remainingQuestions = questions.filter((q) => !randomQuestions.includes(q));\n"

                          "const ticketHTML = generateTicketHtml(randomQuestions, i);\n"
                          "ticketContainer.insertAdjacentHTML('beforeend', ticketHTML);\n"

                          "questions = remainingQuestions;\n"
                          "}\n"
                          "}\n"

                          "const removeQuastionsHandler = () => {\n"
                          "addQuestionButton.classList.toggle('hide');\n"
                          "removeQuestionsButton.classList.toggle('hide');\n"
                          "questions = [];\n"
                          "ticketContainer.innerHTML = '';\n"
                          "}\n"

                          "const addQuestionsHandler = () => {\n"
                          "addQuestions(questionInput, questions);\n"
                          "removeQuestionsButton.classList.toggle('hide');\n"
                          "addQuestionButton.classList.toggle('hide');\n"
                          "}\n"

                          "removeQuestionsButton.addEventListener('click', removeQuastionsHandler);\n"

                          "addQuestionButton.addEventListener('click', addQuestionsHandler);\n"

                          "generateTicketsButton.addEventListener('click', () => {\n"
                          "if (quastionsNumberInTicket.value <= 0) {\n"
                          "alert('введите число вопросов в билете');\n"
                          "return;\n"
                          "}\n"
                          "generateTickets();\n"
                          "})\n"
                          "function printTickets() {\n"

                          "const tickets = document.querySelectorAll('.ticket');\n"
                          "for (let i = 0; i < tickets.length; i++) {\n"
                          "let ticket = tickets[i].textContent;\n"
                          "const ticketWell = ticket.replaceAll(\" \",\"\");\n"

                          "}\n"
                          "const user = \"Tom\";\n"

                          "const xhr = new XMLHttpRequest();\n"

                          "xhr.open(\"POST\", \"/user\");\n"

                          "xhr.send(user);"

                          "}\n"

                          "</script>\n"
                          "</body>\n"
                          "</html>\n";